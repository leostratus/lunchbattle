(1...100).to_a.shuffle
(1...100).to_a.shuffle.reject { rand < 0.2 }
a = (1...100).to_a.shuffle.reject { rand < 0.2 }
b = (1...100).to_a.shuffle.reject { rand < 0.2 }
b = (1...100).to_a.shuffle.reject { rand < 0.3 }
b = (1...100).to_a.shuffle.reject { rand < 0.5 }
rand
b_sorted = b.sort
b_sorted
a = (1...10).to_a.shuffle.reject { rand < 0.5 }
a = (1...10).to_a.shuffle.reject { rand < 0.2 }
b = (1...10).to_a.shuffle.reject { rand < 0.5 }z
b = (1...10).to_a.shuffle.reject { rand < 0.5 }
z
b
a
a.sort
[1,2,3].reject
[1,2,3].reject.with_index { |x,y| puts "#{x},#{y}"; false}
[1,2,3].reject.with_index { |x,y| puts "#{x},#{y}"; true}
[1,2,3].reject!.with_index
$stdin.each_line do |line|
puts line
'abcde'[1...-1]
'abcde'[1..-1]
"Alice $1.00 SOMA SanFrancisco CA".split
[1,2,3,4,5]-[5,3,4,6,7]
[1,2,3] & [3,4,5]
require 'json'
s = "parent: 70d5c5867b4e5f23f2528555539570a06cee7e05\nIIR"
s[8..21]
s[8..33]
s[8..40]
s[8..48]
s[8..46]
s[8..47]
require 'digest/sha1'
Digest::SHA1.hexdigest '123'
Digest::SHA1.hexdigest 'parent: 4142c354781c366af60b52d9e8cab8bc3506b104\nPmS'
Digest::SHA1.hexdigest 'parent: 3b059cb02ee31cefa2fe32bc2695d70f9c4122fc\noxy'
"\nparent: 3b059cb02ee31cefa2fe32bc2695d70f9c4122fc\noxy".length
[1,2,3,4,5][0...-1
]
h = {:a=>1}
h.remove(:a)
h.delete(:a)
h
{}.count
a = [1,2,3]
a += [4,5,6]
a << 8
a.uniq
puts "\\144" * 948
puts "\\220" * 948
puts "\\x90" * 948
Restaurant.new name: 'Sushi'
r = Restaurant.new name: 'Sushi'
r = Restaurant.new name: 'Pizza'
r.save
w = War.new
w.restaurant_1 = Restaurant.first
w.restaurant_2 = Restaurant.last
w.save
w.restaurant_1
q
quit
Fights
Fight.all
Fight.find(1)
f = Fight.new 
f.save
SecureRandom.uuid
u.errors
u = User.new
u
u.fight_id = 1
u.save
Yelp
until gets.eof?
categories = []
until $stdin.eof?
  categories << gets.strip
categories
categories.map{|e| m = e.match(/^(.*) \((.*)\)$/i); [m[1],m[2]]}
categories.map!{|e| m = e.match(/^(.*) \((.*)\)$/i); [m[1],m[2]]}
categories[0]
categories[0].inspect
puts categories[0]
puts categories[0].inspect
  puts e.inspect
categories.each do |e|
  puts e.inspect + ','
end
:category => ['sushi']
,
Yelp::Review::Request::Location.new(
:city => 'Vancouver',
:category => ['sushi'],
:yws_id => YELP_YWSID
)
